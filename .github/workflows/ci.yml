name: CI

on:
  push:
    branches: [ "master", "2.0.X" ]
  pull_request:
    branches: [ "master", "2.0.X" ]

jobs:

  build_and_test:
    name: "Build and test"
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-2019] # we build on GitHub-provided Windows and Linux images
    runs-on: ${{ matrix.os }} # use value from the matrix
    
    steps:    
    - name: Install dependencies (linux)
      if: matrix.os == 'ubuntu-latest' 
      run: |
        sudo apt install ninja-build
        
        wget https://gtlab.de/builddeps/hdf5-1.12.1-linux.tar.gz
        mkdir $HOME/build_deps
        tar xf hdf5-1.12.1-linux.tar.gz -C $HOME/build_deps
        echo "HDF5_DIR=$HOME\build_deps\hdf5-1.12.1-linux\share\cmake\hdf5" >> $GITHUB_ENV
      
    - name: Install Ninja (windows)    # Ninja is not available in GitHub-provided images,
                                       # see https://github.com/actions/runner-images/issues/514
      run: choco install ninja         # So let's install it through Chocolatey
      if: startsWith(matrix.os, 'windows')
      
    - name: Install Qt
      uses: jurplel/install-qt-action@v4
      with:
        version: '5.15.2'
    - uses: ilammy/msvc-dev-cmd@v1 # This action essentially calls vcvarsall.bat for the latest VS in the runner for x64
    - uses: actions/checkout@v3    # Actually check out the sources. GH Actions can run for events that may not require
                                   # sources (e.g. when someone comments on an issue)
    - name: Install dependencies (windows)
      if: startsWith(matrix.os, 'windows')
      shell: powershell
      run: |
        $ProgressPreference = 'SilentlyContinue'
        
        Invoke-WebRequest -Uri https://gtlab.de/builddeps/hdf5-1.12.1-win64.zip -OutFile hdf5-1.12.1-win64.zip
        Expand-Archive -Path 'hdf5-1.12.1-win64.zip' -DestinationPath "$HOME/build_deps"
        "HDF5_DIR=$HOME\build_deps\hdf5-1.12.1-win64\share\cmake\hdf5" | Out-File -FilePath $env:GITHUB_ENV -Append   
        "HDF5_BIN_DIR=$HOME\build_deps\hdf5-1.12.1-win64\bin" | Out-File -FilePath $env:GITHUB_ENV -Append   
 
 
    # Here we call CMake manually, there are solutions for that in the Marketplace: https://github.com/marketplace/actions/run-cmake
    - name: Build
      run: | 
        cmake -S . -B build -G "Ninja Multi-Config" -DBUILD_UNITTESTS=ON -DBUILD_TESTMODULES=ON -DCMAKE_INSTALL_PREFIX=install
        cmake --build build --target install --config=Debug

    - name: Unit Tests - Windows
      if: startsWith(matrix.os, 'windows')
      shell: cmd /C call {0}
      run: |
        set PATH=%cd%\build\install\binDebug;%HDF5_BIN_DIR%;%PATH%
        cd build
        .\GTlabUnitTest.exe --gtest_output=xml:unittests.xml

    - name: Unit Tests - Linux
      if: matrix.os == 'ubuntu-latest'
      run: |
        cd build
        ./GTlabUnitTest --gtest_output=xml:unittests.xml
        
    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: Binaries - ${{ matrix.os }}
        path: |
          install
          build/*.so*
          build/**/*.dll
          build/**/*.exe
          build/**/*.lib
          build/**/*.pdb
          build/GTlab*
          build/modules
          build/**/*.txt
          build/**/*.cmake
          build/**/*.ninja
          build/**/*.log
          build/_deps/*-src

  build_win_qt6:
    name: "Build with qt6 on windows"
    runs-on: windows-2019 
    
    steps:    
    - name: Install Ninja (windows)
      run: choco install ninja
      
    - name: Install Qt
      uses: jurplel/install-qt-action@v4
      with:
        version: '6.5.3'
        modules: 'qt5compat'
        
    - uses: ilammy/msvc-dev-cmd@v1
    - uses: actions/checkout@v3 
    
    - name: Install dependencies (windows)
      shell: powershell
      run: |
        $ProgressPreference = 'SilentlyContinue'
        
        Invoke-WebRequest -Uri https://gtlab.de/builddeps/hdf5-1.12.1-win64.zip -OutFile hdf5-1.12.1-win64.zip
        Expand-Archive -Path 'hdf5-1.12.1-win64.zip' -DestinationPath "$HOME/build_deps"
        "HDF5_DIR=$HOME\build_deps\hdf5-1.12.1-win64\share\cmake\hdf5" | Out-File -FilePath $env:GITHUB_ENV -Append   
        "HDF5_BIN_DIR=$HOME\build_deps\hdf5-1.12.1-win64\bin" | Out-File -FilePath $env:GITHUB_ENV -Append   
 
    - name: Build
      run: | 
        cmake -S . -B build -G "Ninja Multi-Config" -DBUILD_TESTMODULES=ON -DQT_DEFAULT_MAJOR_VERSION=6 -DCMAKE_INSTALL_PREFIX=install
        cmake --build build --target install --config=Debug


  documentation:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false

    steps:
    - uses: actions/checkout@v3
    - name: Install dependencies
      run: |
        sudo apt install -y doxygen
        python -m pip install --upgrade pip
        pip install -r docs/requirements.txt
    - name: Run doxygen
      run: |
        cd docs
        doxygen
    - name: Create documentation
      run: |
        cd docs
        sphinx-build . html
    - name: Save as artifact
      uses: actions/upload-artifact@v4
      with:
        name: doc-devel
        path: |
          docs/html
